d <- sim.pgs(rho=0.2, mu=7, sigma=29)
colMeans(d[as.logical(d$primary), 1:2])
apply(d[as.logical(d$primary), 1:2], 2, sd)
cor(d[as.logical(d$primary), 1:2])
d <- sim.pgs(rho=0.4, mu=7, sigma=29)
colMeans(d[as.logical(d$primary), 1:2])
apply(d[as.logical(d$primary), 1:2], 2, sd)
cor(d[as.logical(d$primary), 1:2])
sim.pgs <- function(N=1e5, rho=0.5, mu=0, sigma=1){
pgs0 <- rnorm(N/2, mu, sigma)
pgs1 <- rnorm(N/2)
pgs <- cbind(pgs0, pgs1)
c1 <- var(pgs)
chol1 <- solve(chol(c1))
print(chol1)
new_pgs <-  pgs %*% chol1
newc <- matrix(c(1, rho, rho, 1), ncol=2)
chol2 <- chol(newc)
print(chol2)
final_pgs <- new_pgs %*% chol2 * sd(pgs0) + mean(pgs0)
output <- data.frame(g0 = c(final_pgs[,1], final_pgs[,2]),
g1 = c(final_pgs[,2], final_pgs[,1]),
family = c(1:N/2, 1:N/2),
primary = c(rep(1, N/2), rep(0, N/2)))
return(output)
}
d <- sim.pgs(rho=0.4, mu=7, sigma=29)
print(all.equal(pgs[,1], new_pgs[,1]))
sim.pgs <- function(N=1e5, rho=0.5, mu=0, sigma=1){
pgs0 <- rnorm(N/2, mu, sigma)
pgs1 <- rnorm(N/2)
pgs <- cbind(pgs0, pgs1)
c1 <- var(pgs)
chol1 <- solve(chol(c1))
print(chol1)
new_pgs <-  pgs %*% chol1
print(zapsmall(cor(new_pgs)))
print(all.equal(pgs[,1], new_pgs[,1]))
newc <- matrix(c(1, rho, rho, 1), ncol=2)
chol2 <- chol(newc)
print(chol2)
final_pgs <- new_pgs %*% chol2 * sd(pgs0) + mean(pgs0)
output <- data.frame(g0 = c(final_pgs[,1], final_pgs[,2]),
g1 = c(final_pgs[,2], final_pgs[,1]),
family = c(1:N/2, 1:N/2),
primary = c(rep(1, N/2), rep(0, N/2)))
return(output)
}
d <- sim.pgs(rho=0.4, mu=7, sigma=29)
d <- sim.pgs(N=100, rho=0.4, mu=7, sigma=29)
?scale
colMeans(d[as.logical(d$primary), 1:2])
apply(d[as.logical(d$primary), 1:2], 2, sd)
cor(d[as.logical(d$primary), 1:2])
sim.pgs <- function(N=1e5, rho=0.5, mu=0, sigma=1){
pgs0 <- rnorm(N/2, mu, sigma)
pgs1 <- rnorm(N/2)
pgs <- cbind(pgs0, pgs1)
c1 <- var(pgs)
chol1 <- solve(chol(c1))
new_pgs <-  pgs %*% chol1
print(zapsmall(cor(new_pgs)))
print(all.equal(pgs[,1], new_pgs[,1]))
newc <- matrix(c(1, rho, rho, 1), ncol=2)
chol2 <- chol(newc)
print(chol2)
final_pgs <- new_pgs %*% chol2 * sd(sigma) + mean(mu)
output <- data.frame(g0 = c(final_pgs[,1], final_pgs[,2]),
g1 = c(final_pgs[,2], final_pgs[,1]),
family = c(1:N/2, 1:N/2),
primary = c(rep(1, N/2), rep(0, N/2)))
return(output)
}
d <- sim.pgs(N=100, rho=0.4, mu=7, sigma=29)
colMeans(d[as.logical(d$primary), 1:2])
apply(d[as.logical(d$primary), 1:2], 2, sd)
cor(d[as.logical(d$primary), 1:2])
d <- sim.pgs(N=1000, rho=0.4, mu=7, sigma=29)
colMeans(d[as.logical(d$primary), 1:2])
apply(d[as.logical(d$primary), 1:2], 2, sd)
cor(d[as.logical(d$primary), 1:2])
sim.pgs <- function(N=1e5, rho=0.5, mu=0, sigma=1){
pgs0 <- rnorm(N/2, mu, sigma)
pgs1 <- rnorm(N/2)
pgs <- cbind(pgs0, pgs1)
c1 <- var(pgs)
chol1 <- solve(chol(c1))
new_pgs <-  pgs %*% chol1
print(zapsmall(cor(new_pgs)))
print(all.equal(pgs[,1], new_pgs[,1]))
newc <- matrix(c(1, rho, rho, 1), ncol=2)
chol2 <- chol(newc)
print(chol2)
final_pgs <- new_pgs %*% chol2 * sigma + mu
output <- data.frame(g0 = c(final_pgs[,1], final_pgs[,2]),
g1 = c(final_pgs[,2], final_pgs[,1]),
family = c(1:N/2, 1:N/2),
primary = c(rep(1, N/2), rep(0, N/2)))
return(output)
}
d <- sim.pgs(N=1000, rho=0.4, mu=7, sigma=29)
colMeans(d[as.logical(d$primary), 1:2])
apply(d[as.logical(d$primary), 1:2], 2, sd)
cor(d[as.logical(d$primary), 1:2])
pgs0 <- rnorm(N/2)
pgs1 <- rnorm(N/2)
sim.pgs <- function(N=1e5, rho=0.5, mu=0, sigma=1){
pgs <- scale(matrix(rnorm(N), ncol=2))
c1 <- var(pgs)
chol1 <- solve(chol(c1))
new_pgs <-  pgs %*% chol1
print(zapsmall(cor(new_pgs)))
print(all.equal(pgs[,1], new_pgs[,1]))
newc <- matrix(c(1, rho, rho, 1), ncol=2)
chol2 <- chol(newc)
print(chol2)
final_pgs <- new_pgs %*% chol2 * sigma + mu
output <- data.frame(g0 = c(final_pgs[,1], final_pgs[,2]),
g1 = c(final_pgs[,2], final_pgs[,1]),
family = c(1:N/2, 1:N/2),
primary = c(rep(1, N/2), rep(0, N/2)))
return(output)
}
d <- sim.pgs(N=1000, rho=0.4, mu=7, sigma=29)
colMeans(d[as.logical(d$primary), 1:2])
apply(d[as.logical(d$primary), 1:2], 2, sd)
cor(d[as.logical(d$primary), 1:2])
d <- sim.pgs(N=1000, rho=0.2, mu=7, sigma=29)
colMeans(d[as.logical(d$primary), 1:2])
apply(d[as.logical(d$primary), 1:2], 2, sd)
cor(d[as.logical(d$primary), 1:2])
d <- sim.pgs()
colMeans(d[as.logical(d$primary), 1:2])
apply(d[as.logical(d$primary), 1:2], 2, sd)
cor(d[as.logical(d$primary), 1:2])
d <- sim.pgs(10)
sim.pgs <- function(N=1e5, rho=0.5, mu=0, sigma=1){
pgs <- scale(matrix(rnorm(N), ncol=2))
c1 <- var(pgs)
chol1 <- solve(chol(c1))
new_pgs <-  pgs %*% chol1
newc <- matrix(c(1, rho, rho, 1), ncol=2)
chol2 <- chol(newc)
final_pgs <- new_pgs %*% chol2 * sigma + mu
output <- data.frame(g0 = c(final_pgs[,1], final_pgs[,2]),
g1 = c(final_pgs[,2], final_pgs[,1]),
family = c(1:N/2, 1:N/2),
primary = c(rep(1, N/2), rep(0, N/2)))
return(output)
}
d <- sim.pgs(10)
colMeans(d[as.logical(d$primary), 1:2])
apply(d[as.logical(d$primary), 1:2], 2, sd)
cor(d[as.logical(d$primary), 1:2])
d
sim.pgs <- function(N=1e5, rho=0.5, mu=0, sigma=1){
pgs <- scale(matrix(rnorm(N), ncol=2))
c1 <- var(pgs)
chol1 <- solve(chol(c1))
new_pgs <-  pgs %*% chol1
newc <- matrix(c(1, rho, rho, 1), ncol=2)
chol2 <- chol(newc)
final_pgs <- new_pgs %*% chol2 * sigma + mu
output <- data.frame(g0 = c(final_pgs[,1], final_pgs[,2]),
g1 = c(final_pgs[,2], final_pgs[,1]),
family = c(1:(N/2), 1:(N/2)),
primary = c(rep(1, N/2), rep(0, N/2)))
return(output)
}
d <- sim.pgs()
d <- sim.pgs(10)
d
d <- sim.pgs(10)
d
cor(d[as.logical(d$primary), 1:2])
library(MASS)
?mvnorm
?mvrnorm
var(d[as.logical(d$primary), 1:2])
cor(d[as.logical(d$primary), 1:2])
d <- sim.pgs(10, rho=0.2)
d
cor(d[as.logical(d$primary), 1:2])
var(d[as.logical(d$primary), 1:2])
d <- sim.pgs(10, sigma = 2, rho=0.2)
d
var(d[as.logical(d$primary), 1:2])
d <- sim.pgs(10, sigma = 2, rho=0.5)
d
var(d[as.logical(d$primary), 1:2])
d <- sim.pgs(10, sigma = 2, rho=0)
d
var(d[as.logical(d$primary), 1:2])
d <- sim.pgs(10, sigma = 2, rho=.9)
d
var(d[as.logical(d$primary), 1:2])
sim.pgs <- function(N=1e5, rho=0.5, mu=0, sigma=1){
require(MASS)
Sigma = newc <- matrix(c(sigma^2, rho*sigma, rho*sigma, sigma^2), ncol=2)
pgs <- mvrnorm(n=N, mu=mu, Sigma=Sigma, emprical=TRUE)
output <- data.frame(g0 = c(final_pgs[,1], final_pgs[,2]),
g1 = c(final_pgs[,2], final_pgs[,1]),
family = c(1:N, 1:N),
primary = c(rep(1, N), rep(0, N)))
return(output)
}
d <- sim.pgs()
sim.pgs <- function(N=1e5, rho=0.5, mu=0, sigma=1){
require(MASS)
Sigma = newc <- matrix(c(sigma^2, rho*sigma, rho*sigma, sigma^2), ncol=2)
pgs <- mvrnorm(n=N, mu=mu, Sigma=Sigma, empirical=TRUE)
output <- data.frame(g0 = c(final_pgs[,1], final_pgs[,2]),
g1 = c(final_pgs[,2], final_pgs[,1]),
family = c(1:N, 1:N),
primary = c(rep(1, N), rep(0, N)))
return(output)
}
d <- sim.pgs()
sim.pgs <- function(N=1e5, rho=0.5, mu=0, sigma=1){
require(MASS)
Sigma <- matrix(c(sigma^2, rho*sigma, rho*sigma, sigma^2), ncol=2)
pgs <- mvrnorm(n=N, mu=mu, Sigma=Sigma, empirical=TRUE)
output <- data.frame(g0 = c(final_pgs[,1], final_pgs[,2]),
g1 = c(final_pgs[,2], final_pgs[,1]),
family = c(1:N, 1:N),
primary = c(rep(1, N), rep(0, N)))
return(output)
}
d <- sim.pgs()
var(d[as.logical(d$primary), 1:2])
sim.pgs <- function(N=1e5, rho=0.5, mu=0, sigma=1){
require(MASS)
Sigma <- matrix(c(sigma^2, rho*sigma^2, rho*sigma^2, sigma^2), ncol=2)
pgs <- mvrnorm(n=N, mu=mu, Sigma=Sigma, empirical=TRUE)
output <- data.frame(g0 = c(final_pgs[,1], final_pgs[,2]),
g1 = c(final_pgs[,2], final_pgs[,1]),
family = c(1:N, 1:N),
primary = c(rep(1, N), rep(0, N)))
return(output)
}
d <- sim.pgs()
var_mat <- matrix(c(sigma^2, rho*sigma^2, rho*sigma^2, sigma^2), ncol=2)
print(var_mat)
var_mat <- matrix(c(sigma^2, rho*sigma^2, rho*sigma^2, sigma^2), ncol=2)
sigma<-2
var_mat <- matrix(c(sigma^2, rho*sigma^2, rho*sigma^2, sigma^2), ncol=2)
print(var_mat)
pgs <- mvrnorm(n=N, mu=mu, Sigma=Sigma, empirical=TRUE)
mu <- 1
pgs <- mvrnorm(n=N, mu=mu, Sigma=Sigma, empirical=TRUE)
pgs <- mvrnorm(n=N, mu=mu, Sigma=var_mat, empirical=TRUE)
N
sim.pgs <- function(N=1e5, rho=0.5, mu=0, sigma=1){
require(MASS)
var_mat <- matrix(c(sigma^2, rho*sigma^2, rho*sigma^2, sigma^2), ncol=2)
print(var_mat)
pgs <- mvrnorm(n=N, mu=rep(mu,N), Sigma=var_mat, empirical=TRUE)
output <- data.frame(g0 = c(final_pgs[,1], final_pgs[,2]),
g1 = c(final_pgs[,2], final_pgs[,1]),
family = c(1:N, 1:N),
primary = c(rep(1, N), rep(0, N)))
return(output)
}
d <- sim.pgs()
var_mat <- matrix(c(sigma^2, rho*sigma^2, rho*sigma^2, sigma^2), ncol=2)
print(var_mat)
pgs <- mvrnorm(n=N, mu=rep(mu,N), Sigma=var_mat, empirical=TRUE)
rep(mu, N)
N <- 100
var_mat <- matrix(c(sigma^2, rho*sigma^2, rho*sigma^2, sigma^2), ncol=2)
print(var_mat)
pgs <- mvrnorm(n=N, mu=rep(mu,N), Sigma=var_mat, empirical=TRUE)
pgs <- mvrnorm(n=N, mu=c(mu,mu), Sigma=var_mat, empirical=TRUE)
sim.pgs <- function(N=1e5, rho=0.5, mu=0, sigma=1){
require(MASS)
var_mat <- matrix(c(sigma^2, rho*sigma^2, rho*sigma^2, sigma^2), ncol=2)
print(var_mat)
pgs <- mvrnorm(n=N, mu=c(mu,mu), Sigma=var_mat, empirical=TRUE)
output <- data.frame(g0 = c(final_pgs[,1], final_pgs[,2]),
g1 = c(final_pgs[,2], final_pgs[,1]),
family = c(1:N, 1:N),
primary = c(rep(1, N), rep(0, N)))
return(output)
}
d <- sim.pgs()
d <- sim.pgs()
sim.pgs <- function(N=1e5, rho=0.5, mu=0, sigma=1){
require(MASS)
var_mat <- matrix(c(sigma^2, rho*sigma^2, rho*sigma^2, sigma^2), ncol=2)
pgs <- mvrnorm(n=N, mu=c(mu,mu), Sigma=var_mat, empirical=TRUE)
output <- data.frame(g0 = c(final_pgs[,1], final_pgs[,2]),
g1 = c(final_pgs[,2], final_pgs[,1]),
family = c(1:N, 1:N),
primary = c(rep(1, N), rep(0, N)))
return(output)
}
d <- sim.pgs()
colMeans(d[as.logical(d$primary), 1:2])
apply(d[as.logical(d$primary), 1:2], 2, sd)
cor(d[as.logical(d$primary), 1:2])
var(d[as.logical(d$primary), 1:2])
sim.pgs <- function(N=1e5, rho=0.5, mu=0, sigma=1){
require(MASS)
var_mat <- matrix(c(sigma^2, rho*sigma^2, rho*sigma^2, sigma^2), ncol=2)
pgs <- mvrnorm(n=N, mu=c(mu,mu), Sigma=var_mat, empirical=TRUE)
output <- data.frame(g0 = c(final_pgs[,1], final_pgs[,2]),
g1 = c(final_pgs[,2], final_pgs[,1]),
family = c(1:N, 1:N),
primary = c(rep(1, N), rep(0, N)))
return(output)
}
d <- sim.pgs()
colMeans(d[as.logical(d$primary), 1:2])
apply(d[as.logical(d$primary), 1:2], 2, sd)
cor(d[as.logical(d$primary), 1:2])
var(d[as.logical(d$primary), 1:2])
sim.pgs <- function(N=1e5, rho=0.5, mu=0, sigma=1){
require(MASS)
var_mat <- matrix(c(sigma^2, rho*sigma^2, rho*sigma^2, sigma^2), ncol=2)
pgs <- mvrnorm(n=N, mu=c(mu,mu), Sigma=var_mat, empirical=TRUE)
output <- data.frame(g0 = c(pgs[,1], pgs[,2]),
g1 = c(pgs[,2], pgs[,1]),
family = c(1:N, 1:N),
primary = c(rep(1, N), rep(0, N)))
return(output)
}
d <- sim.pgs()
colMeans(d[as.logical(d$primary), 1:2])
apply(d[as.logical(d$primary), 1:2], 2, sd)
cor(d[as.logical(d$primary), 1:2])
var(d[as.logical(d$primary), 1:2])
d <- sim.pgs(10, sigma = 2, rho=.9)
d
var(d[as.logical(d$primary), 1:2])
cor(d[as.logical(d$primary), 1:2])
?rnorm
sim.pgs <- function(N=1e5, rho=0.5, mu=0, sd=1){
require(MASS)
var_mat <- matrix(c(sd^2, rho*sd^2, rho*sd^2, sd^2), ncol=2)
pgs <- mvrnorm(n=N, mu=c(mu,mu), Sigma=var_mat, empirical=TRUE)
out <- data.frame(g0 = c(pgs[,1], pgs[,2]),
g1 = c(pgs[,2], pgs[,1]),
family = c(1:N, 1:N),
primary = c(rep(1, N), rep(0, N)))
return(out)
}
d <- sim.pgs(10, sd = .1, rho=.2)
var(d[as.logical(d$primary), 1:2])
cor(d[as.logical(d$primary), 1:2])
d <- sim.pgs(10, sd = 100, rho=.6)
var(d[as.logical(d$primary), 1:2])
cor(d[as.logical(d$primary), 1:2])
d
d <- sim.pgs(1e5, sd = 100, rho=.6)
var(d[as.logical(d$primary), 1:2])
cor(d[as.logical(d$primary), 1:2])
d <- sim.pgs(10)
var(d[as.logical(d$primary), 1:2])
cor(d[as.logical(d$primary), 1:2])
d <- sim.pgs(10)
d
var(d[as.logical(d$primary), 1:2])
cor(d[as.logical(d$primary), 1:2])
sim.phen <- function(N=10, alpha=0, beta=1, rho=0.5,
mu_pgs=0, sd_pgs=1, sd_ind=1, sd_fam=1){
sim.pgs <- function(N=1e5, rho=0.5, mu=0, sd=1){
require(MASS)
var_mat <- matrix(c(sd^2, rho*sd^2, rho*sd^2, sd^2), ncol=2)
pgs <- mvrnorm(n=N, mu=c(mu,mu), Sigma=var_mat, empirical=TRUE)
out <- data.frame(g0 = c(pgs[,1], pgs[,2]),
g1 = c(pgs[,2], pgs[,1]),
family = c(1:N, 1:N),
primary = c(rep(1, N), rep(0, N)))
return(out)
}
eps_0_tmp <- rnorm(N, sd=sd_ind)
eps_1_tmp <- rnorm(N, sd=sd_ind)
eps_fam_tmp <- rnorm(N, sd=sd_fam)
eps_0 <- c(eps_0_tmp, eps_1_tmp)
eps_1 <- c(eps_1_tmp, eps_0_tmp)
eps_fam <- rep(eps_fam_tmp, 2)
a <- rep(alpha, 2*N)
b <- rep(beta, 2*N)
d <- sim.pgs(N=N, rho=rho, mu=mu_pgs, sd=sd_pgs)
d$Y0 <- a + b*d$g0 + eps_0 + eps_fam
d$Y1 <- a + b*d$g1 + eps_1 + eps_fam
return(d)
}
sim.phen()
d <- sim.phen(N=1000)
d$delta_g <- d$g1 - d$g0
d$delta_Y <- d$Y1 - d$Y0
d_lim <- d[d$primary == 1, ]
m.FE <- lm(delta_Y ~ delta_g, data=d_lim)
m.PD <- lm(delta_Y ~ g1, data=d_lim)
m.PD.full <- lm(delta_Y ~ g1, data=d)
summary(m.FE)
summary(m.PD)
summary(m.PD.full)
library(here)
setwd('~/project/phen-diff')
setwd('~/project/phen-dif')
setwd('~/projects/phen-dif')
setwd('~/projects/phen-diff')
source('sim_data.R')
t <- c()
t[1] <- 5
t
t[2] <- 6
t
t[5] <- 8
t
t + 3
?sampl;e
?sample
N <- 10
samp <- sample(1:N, N, replace=TRUE)
samp_full <- c(samp, samp+N)
samp
samp_full
coef(m.FE)
coef(m.FE)[2]
coef(m.PD)
coef(m.PD.full)
setwd('~/projects/phen-diff')
source('sim_data.R')
N <- 1e4
M <- 1e4
d <- sim.phen(N=N)
d$delta_g <- d$g1 - d$g0
d$delta_Y <- d$Y1 - d$Y0
d_lim <- d[d$primary == 1, ]
m_FE <- lm(delta_Y ~ delta_g, data=d_lim)
m_PD <- lm(delta_Y ~ g1, data=d_lim)
m_PD_full <- lm(delta_Y ~ g1, data=d)
betas_FE <- c()
betas_PD <- c()
betas_PD_full <- c()
for (i in 1:M){
samp <- sample(1:N, N, replace=TRUE)
samp_full <- c(samp, samp+N)
boot_FE <- lm(delta_Y ~ delta_g, data=d[samp,])
boot_PD <- lm(delta_Y ~ g1, data=d[samp,])
boot_PD_full <- lm(delta_Y ~ g1, data=d[samp_full,])
betas_FE[i] <- coef(boot_FE)[2]
betas_PD[i] <- coef(boot_PD)[2]
betas_PD_full[i] <- coef(boot_PD_full)[2]
}
betas <- data.frame(FE = betas_FE,
PD = betas_PD,
PD_full = betas_PD_full)
summary(betas)
sd(betas$PD_full*2)
betas$PD_full
2*betas$PD_full
sd(2*betas$PD_full)
summary(betas)
betas %>%
mutate(PD_double = 2*PD,
PD_full_double = 2*PD_full) %>%
summarize(across(everything(), mean, sd))
library(tidyverse)
betas %>%
mutate(PD_double = 2*PD,
PD_full_double = 2*PD_full) %>%
summarize(across(everything(), mean, sd))
betas %>%
mutate(PD_double = 2*PD,
PD_full_double = 2*PD_full) %>%
summarize_all(mean = mean,
sd = sd))
betas %>%
mutate(PD_double = 2*PD,
PD_full_double = 2*PD_full) %>%
summarize_all(mean = mean,
sd = sd)
betas %>%
mutate(PD_double = 2*PD,
PD_full_double = 2*PD_full) %>%
pivot_longer(names_to = 'model', values_to='beta') %>%
group_by(model) %>%
summarize(mean = mean(beta),
sd = sd(beta))
?pivot_longer()
betas %>%
mutate(PD_double = 2*PD,
PD_full_double = 2*PD_full) %>%
pivot_longer(cols=everything(), names_to = 'model', values_to='beta') %>%
group_by(model) %>%
summarize(mean = mean(beta),
sd = sd(beta))
betas %>%
mutate(PD = 2*PD,
PD_full = 2*PD_full) %>%
pivot_longer(cols=everything(), names_to = 'model', values_to='beta') %>%
group_by(model) %>%
summarize(mean = mean(beta),
sd = sd(beta))
betas %>%
mutate(PD = 2*PD,
PD_full = 2*PD_full) %>%
pivot_longer(cols=everything(), names_to = 'model', values_to='beta') %>%
group_by(model) %>%
summarize(beta = mean(beta),
se = sd(beta))
betas %>%
mutate(PD = 2*PD,
PD_full = 2*PD_full) %>%
pivot_longer(cols=everything(), names_to = 'model', values_to='beta') %>%
group_by(model) %>%
summarize(beta_hat = mean(beta),
se = sd(beta))
